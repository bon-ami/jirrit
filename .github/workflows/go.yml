# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  create:
    branches: [ "master" ]
  workflow_dispatch:
  release:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: If no tags
      if: startsWith(github.ref, 'refs/heads/')
      run: echo "TAG_NAME=v0.0.0" >> $GITHUB_ENV

    - name: If tags
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build
      run: |
        echo version $TAG_NAME build ${{ github.sha }}
        [ -z "$TAG_NAME" ] && TAG_NAME="v0.0.0"
        go build -race -ldflags "-X main.Bld=${{ github.sha }} -X main.Ver=$TAG_NAME -extldflags '-static'" -o jirrit
        GOOS=windows go build -ldflags "-X main.Bld=${{ github.sha }} -X main.Ver=$TAG_NAME" -o jirrit.exe
        GOOS=darwin go build -ldflags "-X main.Bld=${{ github.sha }} -X main.Ver=$TAG_NAME" -o jirritMac

    - name: Test
      run: |
        go fmt
        go vet
        go test -v ./...

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: jirrit-artifacts
        path: |
          jirrit
          jirrit.exe
          jirritMac
